using System.Collections.Immutable;
using Markdig.Renderers;
using Markdig.Syntax;

namespace ITGlobal.MarkDocs.Format.Impl.Extensions.CodeBlockRenderers
{
    internal sealed class ClientSideHighlightJsCodeBlockRenderer : ICodeBlockRenderer
    {
        public static ImmutableHashSet<string> SupportedLanguages = ImmutableHashSet.CreateRange(new[]
        {
             "1c",
            "abnf",
            "accesslog",
            "actionscript",
            "ada",
            "apache",
            "applescript",
            "cpp",
            "arduino",
            "armasm",
            "xml",
            "asciidoc",
            "aspectj",
            "autohotkey",
            "autoit",
            "avrasm",
            "awk",
            "axapta",
            "bash",
            "basic",
            "bnf",
            "brainfuck",
            "cal",
            "capnproto",
            "ceylon",
            "clean",
            "clojure",
            "clojure-repl",
            "cmake",
            "coffeescript",
            "coq",
            "cos",
            "crmsh",
            "crystal",
            "cs",
            "csp",
            "css",
            "d",
            "markdown",
            "dart",
            "delphi",
            "diff",
            "django",
            "dns",
            "dockerfile",
            "dos",
            "dsconfig",
            "dts",
            "dust",
            "ebnf",
            "elixir",
            "elm",
            "ruby",
            "erb",
            "erlang-repl",
            "erlang",
            "excel",
            "fix",
            "flix",
            "fortran",
            "fsharp",
            "gams",
            "gauss",
            "gcode",
            "gherkin",
            "glsl",
            "go",
            "golo",
            "gradle",
            "groovy",
            "haml",
            "handlebars",
            "haskell",
            "haxe",
            "hsp",
            "htmlbars",
            "http",
            "inform7",
            "ini",
            "irpf90",
            "java",
            "javascript",
            "json",
            "julia",
            "kotlin",
            "lasso",
            "ldif",
            "less",
            "lisp",
            "livecodeserver",
            "livescript",
            "llvm",
            "lsl",
            "lua",
            "makefile",
            "mathematica",
            "matlab",
            "maxima",
            "mel",
            "mercury",
            "mipsasm",
            "mizar",
            "perl",
            "mojolicious",
            "monkey",
            "moonscript",
            "nginx",
            "nimrod",
            "nix",
            "nsis",
            "objectivec",
            "ocaml",
            "openscad",
            "oxygene",
            "parser3",
            "pf",
            "php",
            "pony",
            "powershell",
            "processing",
            "profile",
            "prolog",
            "protobuf",
            "puppet",
            "purebasic",
            "python",
            "q",
            "qml",
            "r",
            "rib",
            "roboconf",
            "rsl",
            "ruleslanguage",
            "rust",
            "scala",
            "scheme",
            "scilab",
            "scss",
            "smali",
            "smalltalk",
            "sml",
            "sqf",
            "sql",
            "stan",
            "stata",
            "step21",
            "stylus",
            "subunit",
            "swift",
            "taggerscript",
            "yaml",
            "tap",
            "tcl",
            "tex",
            "thrift",
            "tp",
            "twig",
            "typescript",
            "vala",
            "vbnet",
            "vbscript",
            "vbscript-html",
            "verilog",
            "vhdl",
            "vim",
            "x86asm",
            "xl",
            "xquery",
            "zephir",
        });

        public bool CanRender(IPageReadContext ctx, FencedCodeBlock block)
            => SupportedLanguages.Contains(block.Info);

        public IRenderable CreateRenderable(IPageReadContext ctx, FencedCodeBlock block)
        {
            return new ClientSideHighlightJsRenderable(block);
        }
    }
}